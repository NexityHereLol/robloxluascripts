-- âœ… Cleaned Roblox UI Library (Single File)
-- Rewritten to be shorter, modular, and DRY while maintaining full functionality

local roblo_lib = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local function createInstance(class, props, children)
    local inst = Instance.new(class)
    for k, v in pairs(props or {}) do inst[k] = v end
    for _, child in ipairs(children or {}) do child.Parent = inst end
    return inst
end

local function addPadding(obj, pad)
    createInstance("UIPadding", {
        Parent = obj,
        PaddingTop = UDim.new(0, pad),
        PaddingBottom = UDim.new(0, pad),
        PaddingLeft = UDim.new(0, pad),
        PaddingRight = UDim.new(0, pad)
    })
end

function roblo_lib:CreateLib(name)
    local createtab = {}
    local gui = createInstance("ScreenGui", {
        Name = "roblo",
        ResetOnSpawn = false,
        Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    })

    local main = createInstance("Frame", {
        Name = "Main",
        Size = UDim2.new(0, 400, 0, 300),
        Position = UDim2.new(0.5, 0, 0.5, 0),
        AnchorPoint = Vector2.new(0.5, 0.5),
        BackgroundColor3 = Color3.fromRGB(50, 50, 50),
        Active = true,
        Parent = gui
    })

    -- Toggle visibility
    local hiddenPos = UDim2.new(-0.5, 0, 0.5, 0)
    local isVisible, tweening = true, false
    local function toggleUI()
        if tweening then return end
        tweening = true
        local target = isVisible and hiddenPos or UDim2.new(0.5, 0, 0.5, 0)
        main.Visible = true
        TweenService:Create(main, TweenInfo.new(0.5, Enum.EasingStyle.Sine), {Position = target}):Play()
        task.delay(0.5, function()
            if isVisible then main.Visible = false end
            tweening = false
        end)
        isVisible = not isVisible
    end
    UserInputService.InputBegan:Connect(function(i, g)
        if not g and i.KeyCode == Enum.KeyCode.RightControl then toggleUI() end
    end)

    -- Draggable
    do
        local dragging, startPos, dragStart
        main.InputBegan:Connect(function(i)
            if i.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                dragStart, startPos = i.Position, main.Position
                i.Changed:Connect(function() if i.UserInputState == Enum.UserInputState.End then dragging = false end end)
            end
        end)
        UserInputService.InputChanged:Connect(function(i)
            if dragging and i.UserInputType == Enum.UserInputType.MouseMovement then
                local delta = i.Position - dragStart
                local newPos = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
                TweenService:Create(main, TweenInfo.new(0.1), {Position = newPos}):Play()
            end
        end)
    end

    -- Top bar
    local topbar = createInstance("Frame", {
        Name = "TopBar",
        Parent = main,
        Size = UDim2.new(1, 0, 0, 30),
        BackgroundColor3 = Color3.fromRGB(33, 149, 27)
    })

    local title = createInstance("TextLabel", {
        Name = "ui_name",
        Parent = topbar,
        Text = name or "untitled LIB",
        TextColor3 = Color3.new(1,1,1),
        TextSize = 15,
        Font = Enum.Font.ArialBold,
        BackgroundTransparency = 1,
        Size = UDim2.new(0.5, 0, 1, 0),
        TextXAlignment = Enum.TextXAlignment.Left
    })
    addPadding(title, 4)

    local closeBtn = createInstance("ImageButton", {
        Parent = topbar,
        Name = "close_button",
        Size = UDim2.new(0, 20, 0, 20),
        Position = UDim2.new(1, -25, 0, 5),
        AnchorPoint = Vector2.new(1, 0),
        BackgroundTransparency = 1,
        Image = "rbxassetid://18114937392"
    })
    closeBtn.MouseButton1Click:Connect(function()
        gui:Destroy()
    end)

    -- Content layout
    local nav = createInstance("Frame", {
        Parent = main,
        Name = "Navigation",
        BackgroundColor3 = Color3.fromRGB(63,63,63),
        Size = UDim2.new(0, 120, 1, -30),
        Position = UDim2.new(0, 0, 0, 30)
    })

    local tabHolder = createInstance("ScrollingFrame", {
        Parent = nav,
        Size = UDim2.new(1, 0, 1, 0),
        ScrollBarThickness = 0,
        BackgroundTransparency = 1
    }, {
        createInstance("UIListLayout", {
            SortOrder = Enum.SortOrder.LayoutOrder,
            Padding = UDim.new(0, 4)
        })
    })

    local content = createInstance("Frame", {
        Name = "ContentHolder",
        Parent = main,
        BackgroundTransparency = 1,
        Size = UDim2.new(1, -132, 1, -42),
        Position = UDim2.new(0, 126, 0, 36),
        AnchorPoint = Vector2.new(0, 0)
    })

    local currentTab
    function createtab:CreateTab(tabname)
        local tab = createInstance("ImageButton", {
            Name = tabname,
            Parent = tabHolder,
            Size = UDim2.new(1, -8, 0, 32),
            BackgroundColor3 = Color3.fromRGB(83,83,83),
            AutoButtonColor = false
        })
        local label = createInstance("TextLabel", {
            Parent = tab,
            Size = UDim2.new(1, 0, 1, 0),
            BackgroundTransparency = 1,
            Text = tabname,
            Font = Enum.Font.Arial,
            TextColor3 = Color3.new(1,1,1),
            TextSize = 14
        })

        local panel = createInstance("ScrollingFrame", {
            Name = tabname .. "_panel",
            Parent = content,
            Visible = false,
            BackgroundTransparency = 1,
            Size = UDim2.new(1, 0, 1, 0),
            ScrollBarThickness = 0,
            CanvasSize = UDim2.new(0, 0, 0, 10000)
        }, {
            createInstance("UIListLayout", {
                SortOrder = Enum.SortOrder.LayoutOrder,
                Padding = UDim.new(0, 6)
            })
        })

        tab.MouseButton1Click:Connect(function()
            for _, child in ipairs(content:GetChildren()) do
                if child:IsA("ScrollingFrame") then child.Visible = false end
            end
            if currentTab then
                TweenService:Create(currentTab, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(83,83,83)}):Play()
            end
            TweenService:Create(tab, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(63,63,63)}):Play()
            panel.Visible = true
            currentTab = tab
        end)

        local tabapi = {}

        function tabapi:CreateButton(text, callback)
            local btn = createInstance("TextButton", {
                Parent = panel,
                Size = UDim2.new(1, -10, 0, 32),
                Text = text,
                Font = Enum.Font.Arial,
                TextColor3 = Color3.new(1,1,1),
                TextSize = 14,
                BackgroundColor3 = Color3.fromRGB(60,60,60)
            })
            btn.MouseButton1Click:Connect(function()
                pcall(callback)
            end)
        end

        function tabapi:CreateSubDivider(text)
            createInstance("TextLabel", {
                Parent = panel,
                Size = UDim2.new(1, -10, 0, 22),
                Text = text,
                Font = Enum.Font.ArialBold,
                TextColor3 = Color3.new(1,1,1),
                BackgroundTransparency = 1,
                TextXAlignment = Enum.TextXAlignment.Left
            })
        end

        function tabapi:CreateCheckBox(text, callback)
            local frame = createInstance("Frame", {
                Parent = panel,
                Size = UDim2.new(1, -10, 0, 24),
                BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            })
            local label = createInstance("TextLabel", {
                Parent = frame,
                Size = UDim2.new(0.85, 0, 1, 0),
                BackgroundTransparency = 1,
                Text = text,
                Font = Enum.Font.Arial,
                TextColor3 = Color3.new(1,1,1),
                TextXAlignment = Enum.TextXAlignment.Left
            })
            addPadding(label, 4)

            local box = createInstance("TextButton", {
                Parent = frame,
                Size = UDim2.new(0, 20, 0, 20),
                Position = UDim2.new(1, -24, 0.5, -10),
                BackgroundColor3 = Color3.fromRGB(255, 79, 79),
                BorderSizePixel = 0,
                Text = ""
            })
            local state = false
            box.MouseButton1Click:Connect(function()
                state = not state
                TweenService:Create(box, TweenInfo.new(0.2), {
                    BackgroundColor3 = state and Color3.fromRGB(33, 149, 27) or Color3.fromRGB(255, 79, 79)
                }):Play()
                pcall(callback, state)
            end)
        end

        function tabapi:CreateSlider(text, min, max, callback)
            local frame = createInstance("Frame", {
                Parent = panel,
                Size = UDim2.new(1, -10, 0, 48),
                BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            })
            local label = createInstance("TextLabel", {
                Parent = frame,
                Size = UDim2.new(0.5, 0, 0.5, 0),
                Text = text,
                Font = Enum.Font.Arial,
                TextColor3 = Color3.new(1,1,1),
                BackgroundTransparency = 1,
                TextXAlignment = Enum.TextXAlignment.Left
            })
            addPadding(label, 6)

            local valueLabel = createInstance("TextLabel", {
                Parent = frame,
                Size = UDim2.new(0.5, -10, 0.5, 0),
                Position = UDim2.new(0.5, 0, 0, 0),
                Text = tostring(min),
                Font = Enum.Font.Arial,
                TextColor3 = Color3.new(1,1,1),
                BackgroundTransparency = 1,
                TextXAlignment = Enum.TextXAlignment.Right
            })
            addPadding(valueLabel, 6)

            local slider = createInstance("TextButton", {
                Parent = frame,
                Size = UDim2.new(1, -20, 0, 6),
                Position = UDim2.new(0, 10, 1, -12),
                BackgroundColor3 = Color3.fromRGB(40, 40, 40),
                Text = ""
            })

            local dragging = false
            slider.MouseButton1Down:Connect(function()
                dragging = true
            end)
            UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)
            UserInputService.InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    local mouseX = input.Position.X
                    local absPos = slider.AbsolutePosition.X
                    local width = slider.AbsoluteSize.X
                    local percent = math.clamp((mouseX - absPos) / width, 0, 1)
                    local value = math.floor(min + (max - min) * percent)
                    valueLabel.Text = tostring(value)
                    pcall(callback, value)
                end
            end)
        end

        return tabapi
    end

    return createtab
end

return roblo_lib
