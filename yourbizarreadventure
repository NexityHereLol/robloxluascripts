-- Load the UI lib dynamically from GitHub
local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/NexityHereLol/skidware/refs/heads/main/lib_extension.lua"))()

-- Create the interface using the loaded lib
local int = lib:CreateInterface("Skidware: YBA", "center")

-- Tabs
local autofarm   = int:CreateTab("Autofarm")
local misc       = int:CreateTab("Misc")
local serverhop  = int:CreateTab("Server(s) Hop")
local player     = int:CreateTab("Player")
local storymode  = int:CreateTab("Storymode TP(s)")

-- Autofarm Tab
autofarm:CreateLabel("Autofarm Coming Soon...")

-- Misc Tab
misc:CreateButton("Misc Button 2")

misc:CreateSlider("Slider", 100, 16, function(s)
	print("Slider value:", s)
end)

-- âœ… Anti-AFK Toggle
local VirtualUser = game:GetService("VirtualUser")
misc:CreateCheckBox("Anti AFK", function(state)
	if state then
		game.Players.LocalPlayer.Idled:Connect(function()
			VirtualUser:CaptureController()
			VirtualUser:ClickButton2(Vector2.new())
		end)
		print("[Anti AFK] Enabled.")
	else
		print("[Anti AFK] Disabled.")
	end
end)

-- Server Hop Tab
local amt = 8

serverhop:CreateSlider("Player Amount", 16, 1, function(s)
	amt = s
end)

serverhop:CreateButton("Server Hop (Adjust Player Amount)", function()
	local HttpService = game:GetService("HttpService")
	local TeleportService = game:GetService("TeleportService")
	local Players = game:GetService("Players")

	local player = Players.LocalPlayer
	local PlaceId = game.PlaceId
	local currentJobId = game.JobId
	local visitedServers = {
		[currentJobId] = true
	}

	local function serverHop()
		local servers = {}
		local cursor = ""

		local function fetchServers()
			local url = "https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"
			if cursor and cursor ~= "" then
				url = url .. "&cursor=" .. cursor
			end

			local success, result = pcall(function()
				return HttpService:JSONDecode(game:HttpGet(url))
			end)

			if success and result and result.data then
				for _, server in ipairs(result.data) do
					local id = server.id
					local players = server.playing
					local max = server.maxPlayers
					if players >= amt and players < max and not visitedServers[id] then
						table.insert(servers, id)
					end
				end
				cursor = result.nextPageCursor
			else
				warn("[Server Hop] Failed to fetch server list.")
			end
		end

		repeat
			fetchServers()
			task.wait(1)
		until #servers > 0 or not cursor

		if #servers > 0 then
			local target = servers[math.random(1, #servers)]
			visitedServers[target] = true
			TeleportService:TeleportToPlaceInstance(PlaceId, target, player)
		else
			warn("[Server Hop] No suitable servers found (Players >= " .. amt .. ").")
		end
	end

	serverHop()
end)

-- Storymode Teleports (Dropdown)
local teleportData = {
	{name = "Talk to Giorno 1", pos = Vector3.new(1, 1, -705)},
	{name = "Talk to Koichi", pos = Vector3.new(-122, 2, -463)},
	{name = "Talk to Giorno 2", pos = Vector3.new(-390, 1, -681)},
	{name = "Defeat Bruno (First Battle)", pos = Vector3.new(-238, 23, 159)},
	{name = "Talk to Bruno (After Battle)", pos = Vector3.new(-564, -23, -193)},
	{name = "Talk to Giorno 3 (Post Battle)", pos = Vector3.new(-371, 2, -122)},
	{name = "Talk to Fugo 1 (Meet the Gang)", pos = Vector3.new(-328, 2, 30)},
	{name = "Talk to Mista 1 (Meet the Gang)", pos = Vector3.new(150, 5, 79)},
	{name = "Talk to Narancia 1 (Meet the Gang)", pos = Vector3.new(261, 7, -240)},
	{name = "Talk to Abbachio 1 (Meet the Gang)", pos = Vector3.new(355, 1, -313)},
	{name = "Talk to Bruno 3 (Begin the Mission)", pos = Vector3.new(410, 1, -136)},
	{name = "Talk to Trish (Begin the Mission)", pos = Vector3.new(-58, -25, 593)},
	{name = "Train Station (For NPC Battle Quests)", pos = Vector3.new(-264, 1, -82)},
	{name = "Final Talks (1) Before Beating Diavolo", pos = Vector3.new(579, 1, -131)},
	{name = "Final Talks (2) Before Beating Diavolo", pos = Vector3.new(1144, 118, -147)},
}

local tpDropdown = storymode:CreateDropDown("Storymode Teleports")
for _, data in ipairs(teleportData) do
	tpDropdown:AddButton(data.name, function()
		local char = game.Players.LocalPlayer.Character
		local root = char and (char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Torso"))
		if root then
			root.CFrame = CFrame.new(data.pos)
			print("[Teleport] Moved to:", data.name)
		end
	end)
end

-- Player Tab
player:CreateCheckBox("WalkSpeed", function(enable)
	local hum = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
	if hum then
		hum.WalkSpeed = enable and 100 or 16
		print("[WalkSpeed] Set to", hum.WalkSpeed)
	end
end)

player:CreateCheckBox("JumpPower", function(enable)
	local hum = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
	if hum then
		hum.JumpPower = enable and 150 or 50
		print("[JumpPower] Set to", hum.JumpPower)
	end
end)
